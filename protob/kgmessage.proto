syntax = "proto3";
package mywebsocket;

option go_package = "./mywebsocket";

import "external/message.proto";

message Operation {
	string op=1;
	bytes data=2;
} 
message PublicKey{
	bytes N=1;
}
message PrivateKey{
	PublicKey PublicKey=1;
	bytes LambdaN=2;
	bytes PhiN=3;
}
message LocalPreParams  {
	PrivateKey PaillierSK=1;// ski
	bytes NTildei=2;
	bytes H1i=3;
	bytes H2i=4;
	bytes Alpha=5;
	bytes Beta=6;
	bytes P=7;
	bytes Q=8;
	repeated ProtoPartyID partyIds=9;
	int32 Index=10;
	string Gid=11;
	DLNProof Dlnproof1=12;
	DLNProof Dlnproof2=13;
	int32 PartyCount=14;
	int32 Threshold=15;
}
message ProtoPartyID {
	string id = 1;
	string moniker = 2;
	bytes key = 3;
	int32 index=4;
}

message ProtoMpcMessage{
	repeated ProtoPartyID To=1;
	ProtoPartyID From=2;
	string Gid=4;
	string Type=5;
	bool IsBroadcast=6;
	binance.tsslib.MessageWrapper MsgWrapper=7;
	bytes Content=8;
}

message OperationStartDKG {
	string op=1;
	LocalPreParams PreParams=2;
}

message UnSignedMessage {
	bytes Msg=1;
	int32 Index=2;
	string Gid=3;
	SignConfig Config=4;
}
message ResharingMessage{
	string Gid=1;
	ResharingData OldParty=2;
	ResharingData NewParty=3;
	ResharingConfig Config=4;
}
message ResharingData {
	int32 Index=1;
	LocalPreParams PreParams=2;
}
message DLNProof {
	repeated bytes Alpha=1;
	repeated bytes T=2;
}
message DKGConfig{
	int32 PartyCount=1;
	int32 Threshold=2;
}
message SignConfig{
	int32 PartyCount=1;
	int32 Threshold=2;
	repeated int32 SignPartyIndex=3;
}
message ResharingConfig{
	int32 PartyCount=1;
	int32 Threshold=2;
	int32 NPartyCount=3;
	int32 NThreshold=4;
	repeated int32 OldPartyIndex=5; 
 }